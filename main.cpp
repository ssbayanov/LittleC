#if defined _WIN32
#include <io.h>              // For isatty
#elif defined _WIN64
#include <io.h>              // For isatty
#endif

#ifdef MSVC
#define  isatty _isatty	      // In VC isatty named _isatty
#endif

#include <iostream>
#include <fstream>
#include <cstdlib>
#include <map>
#include <tuple>
#include <vector>
#include <string>

#include <QtCore>

#include "lexer_constructions.h"

// This header is generated by Flex.
#include "lexer.cpp"

// This header is generated by bison.
//#include "parser.cpp"

using namespace std;


int main(int argc, char *argv[])
{
    QCoreApplication app(argc, argv);

    // Check arguments.
    if(argc < 2) {
        cerr << "Too few parameters in command line.\n";
        return EXIT_FAILURE; }
    else if (argc > 2) {
        cerr << "Too much parameters in command line.\n";
        return EXIT_FAILURE; }

    // Open input file
    ifstream infile;
    infile.open(argv[1]);
    if (infile.fail()) {
        cerr << "Cannot open file " << argv[1] << "\n";
        return EXIT_FAILURE; }

    yyFlexLexer lexer(&infile);
    lexer.yylex();

    infile.close();

    cout << "Dump token table.\n\n";
    if (0 < TokenTable.size()) {
        dumpTokenTable("Token class", "Token value", "Line number"); }
    else {
        cout << "No tokens." << "\n"; }

    cout << "\nDump finished.\n\n";

    return app.exec();
}
